# .github/workflows/pr-build.yml

name: Build and Test on Pull Request

on:
  pull_request:
    types: [opened, synchronize]
    branches: [ master ]

jobs:
  build-and-comment:
    environment: Dev
    runs-on: ubuntu-latest
    # Add permissions for the GITHUB_TOKEN
    permissions:
      pull-requests: write

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_DATABASE: laravel
          MYSQL_ROOT_PASSWORD: password
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    strategy:
      matrix:
        php: [8.2]
        laravel: [11.9.*]
        testbench: [9.*]
        dependency-version: [prefer-stable]
        os: [ubuntu-latest]

    steps:
      # Checkout the code
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Find Previous Comment
        id: find-comment
        uses: peter-evans/find-comment@v3
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: ''

      - name: Delete Previous Comment
        if: steps.find-comment.outputs.comment-id != ''
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.deleteComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: ${{ steps.find-comment.outputs.comment-id }}
            })

      # The shit I copied idk how this shit works but it does
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}

      # Setup Node.js for frontend build
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: |
          composer install
          npm ci

      - name: Build frontend assets
        run: npm run build

      - name: Set up environment
        run: |
          cp .env.example .env
          php artisan key:generate

      - name: Execute tests
        id: tests
        continue-on-error: true
        env:
          DB_CONNECTION: mysql
          DB_HOST: 127.0.0.1
          DB_PORT: ${{ job.services.mysql.ports['3306'] }}
          DB_DATABASE: laravel
          DB_USERNAME: root
          DB_PASSWORD: password
        run: php artisan test > TEST_RESULTS 

      # Back to my shit
      - name: Load test results
        id: load_test_results
        run: |
          echo "results<<EOF" >> $GITHUB_OUTPUT
          cat TEST_RESULTS >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      # Create a new comment with the image details
      - name: Create New Comment
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ## PHP Test Results

            **Matrix:** `php: ${{ matrix.php }}`, `laravel: ${{ matrix.laravel }}`, `deps: ${{ matrix.dependency-version }}`
            **Result: ${{ steps.tests.outcome == 'success' && '✅' || '❌' }} ${{ steps.tests.outcome }}**

            <details>
            <summary>Click to see full test output</summary>

            ```
            ${{ steps.load_test_results.outputs.results }}
            ```
            </details>

      - name: Fail workflow if tests failed
        if: steps.tests.outcome == 'failure'
        run: exit 1
